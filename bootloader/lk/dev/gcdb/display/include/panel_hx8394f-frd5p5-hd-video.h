/* Copyright (c) 2013, The Linux Foundation. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *  * Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in
 *    the documentation and/or other materials provided with the
 *    distribution.
 *  * Neither the name of The Linux Foundation nor the names of its
 *    contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
 * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
 * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
 * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
 * OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
 * AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */
/* zhouwentao modify porch for QL1000 onus hengkaihui hx8389b 2014.8.6*/
/*zhouwentao update para for onus hengkaihui 2014.8.6*/
/*---------------------------------------------------------------------------
 * This file is autogenerated file using gcdb parser. Please do not edit it.
 * Update input XML file to add a new entry or update variable in this file
 * VERSION = "1.0"
 *---------------------------------------------------------------------------*/

#ifndef _PANEL_TXD_H8394F_FRD_HD_550_VIDEO_H_

#define _PANEL_TXD_H8394F_FRD_HD_550_VIDEO_H_
/*---------------------------------------------------------------------------*/
/* HEADER files                                                              */
/*---------------------------------------------------------------------------*/
#include "panel.h"
#define H8394F_FRD_HD_550_VIDEO_SIGNATURE 8394
#define H8394F_FRD_HD_550_VIDEO_ID 0
#define H8394F_FRD_HD_550_VIDEO_ADC_STATUS 0
#define	H8394F_FRD_HD_550_VIDEO_IC_TYPE 8394
#define	H8394F_FRD_HD_550_VIDEO_ADC_MAX  0
#define	H8394F_FRD_HD_550_VIDEO_ADC_MIN   0

#define CMD_DELAY 0x10
/*---------------------------------------------------------------------------*/
/* Panel configuration                                                       */
/*---------------------------------------------------------------------------*/
static struct panel_config h8394f_frd_hd_hd_550_video_panel_data = {
  "qcom,mdss_dsi_h8394f_frd_5p5_hd_video", "dsi:0:", "qcom,mdss-dsi-panel",
  10, 0, "DISPLAY_1", 0, 0, 60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
};

/*---------------------------------------------------------------------------*/
/* Panel resolution                                                          */
/*---------------------------------------------------------------------------*/
static struct panel_resolution h8394f_frd_hd_hd_550_video_panel_res = {
	720, 1280, 100, 100, 8, 0, 20, 14, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0
  
};

/*---------------------------------------------------------------------------*/
/* Panel Color Information                                                   */
/*---------------------------------------------------------------------------*/
static struct color_info h8394f_frd_hd_hd_550_video_color = {
  24, 0, 0xff, 0, 0, 0
};

/*---------------------------------------------------------------------------*/
/* Panel Command information                                                 */
/*---------------------------------------------------------------------------*/
static char mipi_h8394f_frd_hd_cmd0[] = {
0x04, 0x00, 0x39, 0xC0, 
0xB9, 0xFF, 0x83, 0x94, 
};


static char mipi_h8394f_frd_hd_cmd1[] = {
0x07, 0x00, 0x39, 0xC0, 
0xBA, 0x33, 0x83, 0x68, 
0x6B, 0xB2, 0xC0, 
};

static char mipi_h8394f_frd_hd_cmd2[] = {
0x0B, 0x00, 0x39, 0xC0, 
0xB1, 0x48, 0x12, 0x72, 
0x09, 0x33, 0x41, 0x71, 
0x51, 0x50, 0x3B, 0xff
};


static char mipi_h8394f_frd_hd_cmd3[] = {
0x07, 0x00, 0x39, 0xC0, 
0xB2, 0x00, 0x80, 0x64, 
0x0E, 0x0D, 0x2F, 0xff
};


static char mipi_h8394f_frd_hd_cmd4[] = {
0x16, 0x00, 0x39, 0xC0, 
0xB4, 0x03, 0x74, 0x23, 
0x74, 0x23, 0x7C, 0x01, 
0x0C, 0x86, 0x75, 0x00, 
0x3F, 0x03, 0x74, 0x23, 
0x74, 0x23, 0x74, 0x01, 
0x0C, 0x86, 0xff, 0xff
};


static char mipi_h8394f_frd_hd_cmd5[] = {
0x22, 0x00, 0x39, 0xC0, 
0xD3, 0x00, 0x00, 0x07, 
0x07, 0x00, 0x00, 0x08, 
0x08, 0x32, 0x10, 0x09, 
0x00, 0x09, 0x32, 0x15, 
0x0D, 0x05, 0x0D, 0x32, 
0x10, 0x08, 0x00, 0x00, 
0x37, 0x33, 0x0C, 0x0C, 
0x27, 0x02, 0x02, 0x27, 
0x0E, 0x40, 0xff, 0xff
};


static char mipi_h8394f_frd_hd_cmd6[] = {
0x2D, 0x00, 0x39, 0xC0, 
0xD5, 0x27, 0x26, 0x25, 
0x24, 0x07, 0x06, 0x05, 
0x04, 0x03, 0x02, 0x01, 
0x00, 0x18, 0x18, 0x18, 
0x18, 0x18, 0x18, 0x18, 
0x18, 0x18, 0x18, 0x18, 
0x18, 0x18, 0x18, 0x18, 
0x18, 0x18, 0x18, 0x18, 
0x18, 0x18, 0x18, 0x18, 
0x18, 0x21, 0x20, 0x23, 
0x22, 0x18, 0x18, 0x18, 
0x18, 0xff, 0xff, 0xff
};


static char mipi_h8394f_frd_hd_cmd7[] = {
0x2D, 0x00, 0x39, 0xC0, 
0xD6, 0x20, 0x21, 0x22, 
0x23, 0x04, 0x05, 0x06, 
0x07, 0x00, 0x01, 0x02, 
0x03, 0x18, 0x18, 0x18, 
0x18, 0x18, 0x18, 0x18, 
0x18, 0x18, 0x18, 0x18, 
0x18, 0x18, 0x18, 0x18, 
0x18, 0x18, 0x18, 0x18, 
0x18, 0x18, 0x18, 0x18, 
0x18, 0x26, 0x27, 0x24, 
0x25, 0x18, 0x18, 0x18, 
0x18,  0xff, 0xff, 0xff
};


static char mipi_h8394f_frd_hd_cmd8[] = {
0x3B, 0x00, 0x39, 0xC0, 
0xE0, 0x00, 0x0B, 0x1B, 
0x25, 0x2A, 0x30, 0x34, 
0x34, 0x6C, 0x7D, 0x8E, 
0x8B, 0x8D, 0x9B, 0x9A, 
0x97, 0xA0, 0x9F, 0x99, 
0xA7, 0xB5, 0x59, 0x58, 
0x5C, 0x60, 0x61, 0x67, 
0x72, 0x7F, 0x00, 0x0B, 
0x1B, 0x25, 0x2A, 0x30, 
0x34, 0x34, 0x6C, 0x7D, 
0x8E, 0x8B, 0x8D, 0x9A, 
0x99, 0x95, 0xA0, 0x9E, 
0x99, 0xA6, 0xB4, 0x59, 
0x58, 0x5C, 0x60, 0x62, 
0x68, 0x73, 0x7F, 0xff
};


static char mipi_h8394f_frd_hd_cmd9[] = {
0x03, 0x00, 0x39, 0xC0, 
0xB6, 0x46, 0x46, 0xff
};


static char mipi_h8394f_frd_hd_cmd10[] = {
0x02, 0x00, 0x39, 0xC0, 
0xCC, 0x0B, 0xff, 0xff
};


static char mipi_h8394f_frd_hd_cmd11[] = {
0x03, 0x00, 0x39, 0xC0, 
0xC0, 0x1F, 0x31, 0xff
};

static char mipi_h8394f_frd_hd_cmd12[] = {
0x02, 0x00, 0x39, 0xC0, 
0xD4, 0x02, 0xff, 0xff
};

static char mipi_h8394f_frd_hd_cmd13[] = {
0x02, 0x00, 0x39, 0xC0, 
0xBD, 0x01, 0xff, 0xff
};

static char mipi_h8394f_frd_hd_cmd14[] = {
0x02, 0x00, 0x39, 0xC0, 
0xB1, 0x00, 0xff, 0xff
};

static char mipi_h8394f_frd_hd_cmd15[] = {
0x02, 0x00, 0x39, 0xC0, 
0xBD, 0x00, 0xff, 0xff
};

static char mipi_h8394f_frd_hd_cmd16[] = {
0x08, 0x00, 0x39, 0xC0, 
0xBF, 0x40, 0x81, 0x50, 
0x00, 0x1A, 0xFC, 0x01
};

static char mipi_h8394f_frd_hd_cmd17[] = {
0x02, 0x00, 0x39, 0xC0, 
0xC6, 0xEF, 0xff, 0xff
};

static char mipi_h8394f_frd_hd_cmd_exit_sleep[] = {
	0x11, 0x00, 0x05, 0x80
};

static char mipi_h8394f_frd_hd_cmd_display_on[] = {
	0x29, 0x00, 0x05, 0x80
};

static struct mipi_dsi_cmd h8394f_frd_hd_hd_550_video_on_command[] = {
{sizeof(mipi_h8394f_frd_hd_cmd0), (char *)mipi_h8394f_frd_hd_cmd0,CMD_DELAY},
{sizeof(mipi_h8394f_frd_hd_cmd1), (char *)mipi_h8394f_frd_hd_cmd1,CMD_DELAY},
{sizeof(mipi_h8394f_frd_hd_cmd2), (char *)mipi_h8394f_frd_hd_cmd2,CMD_DELAY},
{sizeof(mipi_h8394f_frd_hd_cmd3), (char *)mipi_h8394f_frd_hd_cmd3,CMD_DELAY},
{sizeof(mipi_h8394f_frd_hd_cmd4), (char *)mipi_h8394f_frd_hd_cmd4,CMD_DELAY},
{sizeof(mipi_h8394f_frd_hd_cmd5), (char *)mipi_h8394f_frd_hd_cmd5,CMD_DELAY},
{sizeof(mipi_h8394f_frd_hd_cmd6), (char *)mipi_h8394f_frd_hd_cmd6,CMD_DELAY},
{sizeof(mipi_h8394f_frd_hd_cmd7), (char *)mipi_h8394f_frd_hd_cmd7,CMD_DELAY},
{sizeof(mipi_h8394f_frd_hd_cmd8), (char *)mipi_h8394f_frd_hd_cmd8,CMD_DELAY},
{sizeof(mipi_h8394f_frd_hd_cmd9), (char *)mipi_h8394f_frd_hd_cmd9,CMD_DELAY},
{sizeof(mipi_h8394f_frd_hd_cmd10), (char *)mipi_h8394f_frd_hd_cmd10,CMD_DELAY},
{sizeof(mipi_h8394f_frd_hd_cmd11), (char *)mipi_h8394f_frd_hd_cmd11,CMD_DELAY},
{sizeof(mipi_h8394f_frd_hd_cmd12), (char *)mipi_h8394f_frd_hd_cmd12,CMD_DELAY},
{sizeof(mipi_h8394f_frd_hd_cmd13), (char *)mipi_h8394f_frd_hd_cmd13,CMD_DELAY},
{sizeof(mipi_h8394f_frd_hd_cmd14), (char *)mipi_h8394f_frd_hd_cmd14,CMD_DELAY},
{sizeof(mipi_h8394f_frd_hd_cmd15), (char *)mipi_h8394f_frd_hd_cmd15,CMD_DELAY},
{sizeof(mipi_h8394f_frd_hd_cmd16), (char *)mipi_h8394f_frd_hd_cmd16,CMD_DELAY},
{sizeof(mipi_h8394f_frd_hd_cmd17), (char *)mipi_h8394f_frd_hd_cmd17,CMD_DELAY},

{sizeof(mipi_h8394f_frd_hd_cmd_exit_sleep), (char *)mipi_h8394f_frd_hd_cmd_exit_sleep,150},
{sizeof(mipi_h8394f_frd_hd_cmd_display_on), (char *)mipi_h8394f_frd_hd_cmd_display_on,50},

};

#define H8394F_FRD_HD_550_VIDEO_ON_COMMAND  ARRAY_SIZE(h8394f_frd_hd_hd_550_video_on_command)

static char h8394f_frd_hd_hd_550_videooff_cmd0[] = {
0x28, 0x00, 0x05, 0x80 };


static char h8394f_frd_hd_hd_550_videooff_cmd1[] = {
0x10, 0x00, 0x05, 0x80 };




static struct mipi_dsi_cmd h8394f_frd_hd_hd_550_video_off_command[] = {
{ 0x4 , h8394f_frd_hd_hd_550_videooff_cmd0},
{ 0x4 , h8394f_frd_hd_hd_550_videooff_cmd1}
};
#define H8394F_FRD_HD_550_VIDEO_OFF_COMMAND 2


static struct command_state h8394f_frd_hd_hd_550_video_state = {
  0, 1
};

/*---------------------------------------------------------------------------*/
/* Command mode panel information                                            */
/*---------------------------------------------------------------------------*/

static struct commandpanel_info h8394f_frd_hd_hd_550_video_command_panel = {
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
};

/*---------------------------------------------------------------------------*/
/* Video mode panel information                                              */
/*---------------------------------------------------------------------------*/

static struct videopanel_info h8394f_frd_hd_hd_550_video_video_panel = {
  1, 0, 0, 0, 1, 1, 2, 0, 0x9
};

/*---------------------------------------------------------------------------*/
/* Lane Configuration                                                        */
/*---------------------------------------------------------------------------*/

static struct lane_configuration h8394f_frd_hd_hd_550_video_lane_config = {
  4, 0, 1, 1, 1, 1
};


/*---------------------------------------------------------------------------*/
/* Panel Timing                                                              */
/*---------------------------------------------------------------------------*/
const uint32_t h8394f_frd_hd_hd_550_video_timings[] = {
  0xE7,0x36,0x24,0x00,0x66,0x6A,0x2A,0x3A,0x2D,0x03,0x04,0x00
};



static struct mipi_dsi_cmd h8394f_frd_hd_hd_550_video_rotation[] = {

};
#define H8394F_FRD_HD_550_VIDEO_ROTATION 0


static struct panel_timing h8394f_frd_hd_hd_550_video_timing_info = {
  0, 4, 0x03, 0x35
};

static struct panel_reset_sequence h8394f_frd_hd_hd_550_video_panel_reset_seq = {
{ 1, 0, 1, }, { 50, 50, 150, }, 2
};

/*---------------------------------------------------------------------------*/
/* Backlight Settings                                                        */
/*---------------------------------------------------------------------------*/

static struct backlight h8394f_frd_hd_hd_550_video_backlight = {
  1, 1, 255, 100, 2, "PMIC_8941"
};


#endif /*_PANEL_TXD_H8394F_FRD_HD_550_VIDEO_H_*/

